{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { isUrl } from '@lib/string';\nimport { omit } from 'lodash';\nimport cookie from 'js-cookie';\nimport { APIRequest, TOKEN } from './api-request';\nimport env from '../env';\nexport var PerformerService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PerformerService, _APIRequest);\n\n  var _super = _createSuper(PerformerService);\n\n  function PerformerService() {\n    _classCallCheck(this, PerformerService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PerformerService, [{\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/performers/me', headers);\n    }\n  }, {\n    key: \"updateMe\",\n    value: function updateMe(payload) {\n      return this.put('/performers', payload);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/performers/search', query));\n    }\n  }, {\n    key: \"details\",\n    value: function details(username) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.get(\"/performers/\".concat(username, \"/view\"), headers);\n    }\n  }, {\n    key: \"getAvatarUploadUrl\",\n    value: function getAvatarUploadUrl() {\n      return \"\".concat(env.apiEndpoint, \"/performers/avatar/upload\");\n    }\n  }, {\n    key: \"getDocumentsUploadUrl\",\n    value: function getDocumentsUploadUrl() {\n      return \"\".concat(env.apiEndpoint, \"/performers/documents/upload\");\n    }\n  }, {\n    key: \"getReleaseFormUrl\",\n    value: function getReleaseFormUrl() {\n      return \"\".concat(env.apiEndpoint, \"/performers/release-form/upload\");\n    }\n  }, {\n    key: \"myProduct\",\n    value: function myProduct(query) {\n      return this.get(this.buildUrl('/performer/performer-assets/products/search', query));\n    }\n  }, {\n    key: \"createProduct\",\n    value: function createProduct(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {}\n      };\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener('load', function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n\n          if (!success) {\n            return reject(response);\n          }\n\n          return resolve(response);\n        });\n        req.upload.addEventListener('error', function () {\n          reject(req.response);\n        });\n        var formData = new FormData(); // formData.append('file', file, file.name);\n\n        if (data.image) {\n          var image = data.image.file.originFileObj;\n          formData.append('image', image, image.name);\n        }\n\n        if (data.digitalFile) {\n          var digitalFile = data.digitalFile.file.originFileObj;\n          formData.append('digitalFile', digitalFile, digitalFile.name);\n        }\n\n        Object.keys(omit(data, ['image', 'digitalFile'])).forEach(function (v) {\n          formData.append(v, data[v]);\n        });\n        req.responseType = 'json';\n        req.open('POST', isUrl(url) ? url : \"\".concat(env.apiEndpoint).concat(url));\n        var token = cookie.get(TOKEN);\n\n        if (token) {\n          req.setRequestHeader('Authorization', token);\n        }\n\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"updateProduct\",\n    value: function updateProduct(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {}\n      };\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener('load', function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n\n          if (!success) {\n            return reject(response);\n          }\n\n          return resolve(response);\n        });\n        req.upload.addEventListener('error', function () {\n          reject(req.response);\n        });\n        var formData = new FormData(); // formData.append('file', file, file.name);\n\n        if (data.image && data.image.file) {\n          var image = data.image.file.originFileObj;\n          formData.append('image', image, image.name);\n        }\n\n        if (data.digitalFile && data.digitalFile.file) {\n          var digitalFile = data.digitalFile.file.originFileObj;\n          formData.append('digitalFile', digitalFile, digitalFile.name);\n        }\n\n        Object.keys(omit(data, ['image', 'digitalFile'])).forEach(function (v) {\n          formData.append(v, data[v]);\n        });\n        req.responseType = 'json';\n        req.open('PUT', isUrl(url) ? url : \"\".concat(env.apiEndpoint).concat(url));\n        var token = cookie.get(TOKEN);\n\n        if (token) {\n          req.setRequestHeader('Authorization', token);\n        }\n\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"removeProduct\",\n    value: function removeProduct(id) {\n      return this.del(\"/performer/performer-assets/products/\".concat(id));\n    }\n  }, {\n    key: \"getCommission\",\n    value: function getCommission() {\n      return this.get('/settings/performer/commission');\n    }\n  }, {\n    key: \"updatePaymentInfo\",\n    value: function updatePaymentInfo(payload) {\n      return this.post('/performers/bank-transfer/update', payload);\n    }\n  }, {\n    key: \"updateDirectDepost\",\n    value: function updateDirectDepost(payload) {\n      return this.post('/performers/direct-deposit/update', payload);\n    }\n  }, {\n    key: \"updatePaxum\",\n    value: function updatePaxum(payload) {\n      return this.post('/performers/paxum/update', payload);\n    }\n  }, {\n    key: \"updateBitpay\",\n    value: function updateBitpay(payload) {\n      return this.post('/performers/bitpay/update', payload);\n    }\n  }, {\n    key: \"updateStreamingStatus\",\n    value: function updateStreamingStatus(payload) {\n      return this.post('/performers/streaming-status/update', payload);\n    }\n  }, {\n    key: \"geoBlock\",\n    value: function geoBlock(payload) {\n      return this.post('/performers/blocking/update', payload);\n    }\n  }, {\n    key: \"getBlockedList\",\n    value: function getBlockedList() {\n      return this.get(this.buildUrl('/performers/blocking'));\n    }\n  }, {\n    key: \"increaseView\",\n    value: function increaseView(performerId) {\n      return this.post(\"/performers/\".concat(performerId, \"/inc-view\"));\n    }\n  }, {\n    key: \"updateDefaultPrice\",\n    value: function updateDefaultPrice(payload) {\n      return this.post('/performers/default-price/update', payload);\n    }\n  }, {\n    key: \"updateBroadcastSetting\",\n    value: function updateBroadcastSetting(payload) {\n      return this.post('/performers/broadcast-setting/update', payload);\n    }\n  }, {\n    key: \"suspendAccount\",\n    value: function suspendAccount(performerId) {\n      return this.post(\"/performers/suspend-account/\".concat(performerId));\n    }\n  }, {\n    key: \"checkBlock\",\n    value: function checkBlock(performerId) {\n      return this.get(\"/performers/\".concat(performerId, \"/check-blocking\"));\n    }\n  }]);\n\n  return PerformerService;\n}(APIRequest);\nexport var GENNDER_PERFORMER = ['female', 'transgender', 'male'];\nexport var performerService = new PerformerService();","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/services/perfomer.service.ts"],"names":["isUrl","omit","cookie","APIRequest","TOKEN","env","PerformerService","headers","get","payload","put","query","buildUrl","username","apiEndpoint","url","data","options","onProgress","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","success","status","response","formData","FormData","image","file","originFileObj","append","name","digitalFile","Object","keys","forEach","v","responseType","open","token","setRequestHeader","send","id","del","post","performerId","GENNDER_PERFORMER","performerService"],"mappings":"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","sourcesContent":["import {\n  IPerformer,\n  ICreatePerformerProductPayload,\n  IUpdatePerformerProductPayload\n} from 'src/interfaces';\nimport { isUrl } from '@lib/string';\nimport { omit } from 'lodash';\nimport cookie from 'js-cookie';\n\nimport { APIRequest, IResponse, TOKEN } from './api-request';\n\nimport env from '../env';\n\nexport class PerformerService extends APIRequest {\n  me(headers?: { [key: string]: string }): Promise<IResponse<IPerformer>> {\n    return this.get('/performers/me', headers);\n  }\n\n  updateMe(payload: any) {\n    return this.put('/performers', payload);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/search', query));\n  }\n\n  details(username: string, headers = {}): Promise<IResponse<IPerformer>> {\n    return this.get(`/performers/${username}/view`, headers);\n  }\n\n  getAvatarUploadUrl() {\n    return `${env.apiEndpoint}/performers/avatar/upload`;\n  }\n\n  getDocumentsUploadUrl() {\n    return `${env.apiEndpoint}/performers/documents/upload`;\n  }\n\n  getReleaseFormUrl() {\n    return `${env.apiEndpoint}/performers/release-form/upload`;\n  }\n\n  myProduct(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/performer/performer-assets/products/search', query)\n    );\n  }\n\n  createProduct(\n    url: string,\n    data: ICreatePerformerProductPayload,\n    options: { onProgress: Function } = {\n      onProgress() {}\n    }\n  ): Promise<IResponse<any>> {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      // formData.append('file', file, file.name);\n      if (data.image) {\n        const image = data.image.file.originFileObj;\n        formData.append('image', image, image.name);\n      }\n\n      if (data.digitalFile) {\n        const digitalFile = data.digitalFile.file.originFileObj;\n        formData.append('digitalFile', digitalFile, digitalFile.name);\n      }\n\n      Object.keys(omit(data, ['image', 'digitalFile'])).forEach((v) => {\n        formData.append(v, data[v]);\n      });\n\n      req.responseType = 'json';\n      req.open('POST', isUrl(url) ? url : `${env.apiEndpoint}${url}`);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n\n  updateProduct(\n    url: string,\n    data: IUpdatePerformerProductPayload,\n    options: { onProgress: Function } = {\n      onProgress() {}\n    }\n  ): Promise<IResponse<any>> {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      // formData.append('file', file, file.name);\n      if (data.image && data.image.file) {\n        const image = data.image.file.originFileObj;\n        formData.append('image', image, image.name);\n      }\n\n      if (data.digitalFile && data.digitalFile.file) {\n        const digitalFile = data.digitalFile.file.originFileObj;\n        formData.append('digitalFile', digitalFile, digitalFile.name);\n      }\n\n      Object.keys(omit(data, ['image', 'digitalFile'])).forEach((v) => {\n        formData.append(v, data[v]);\n      });\n\n      req.responseType = 'json';\n      req.open('PUT', isUrl(url) ? url : `${env.apiEndpoint}${url}`);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n\n  removeProduct(id: string) {\n    return this.del(`/performer/performer-assets/products/${id}`);\n  }\n\n  getCommission() {\n    return this.get('/settings/performer/commission');\n  }\n\n  updatePaymentInfo(payload): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/bank-transfer/update', payload);\n  }\n\n  updateDirectDepost(payload): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/direct-deposit/update', payload);\n  }\n\n  updatePaxum(payload): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/paxum/update', payload);\n  }\n\n  updateBitpay(payload): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/bitpay/update', payload);\n  }\n\n  updateStreamingStatus(payload: {\n    status: string;\n  }): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/streaming-status/update', payload);\n  }\n\n  geoBlock(payload: {userIds?: string[], countries?: string[]}): Promise<IResponse<any>> {\n    return this.post('/performers/blocking/update', payload);\n  }\n\n  getBlockedList(): Promise<IResponse<any>> {\n    return this.get(this.buildUrl('/performers/blocking'));\n  }\n\n  increaseView(performerId) {\n    return this.post(`/performers/${performerId}/inc-view`);\n  }\n\n  updateDefaultPrice(payload): Promise<IResponse<IPerformer>> {\n    return this.post('/performers/default-price/update', payload);\n  }\n\n  updateBroadcastSetting(payload): Promise<IResponse<any>> {\n    return this.post('/performers/broadcast-setting/update', payload);\n  }\n\n  suspendAccount(performerId: string) {\n    return this.post(`/performers/suspend-account/${performerId}`);\n  }\n\n  checkBlock(performerId: string) {\n    return this.get(`/performers/${performerId}/check-blocking`);\n  }\n}\n\nexport const GENNDER_PERFORMER = ['female', 'transgender', 'male'];\n\nexport const performerService = new PerformerService();\n"]},"metadata":{},"sourceType":"module"}