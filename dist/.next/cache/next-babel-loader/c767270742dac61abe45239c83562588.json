{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport React, { PureComponent } from 'react';\nimport { transactionService } from 'src/services';\nimport { getResponseError, getSearchData } from '@lib/utils';\nimport Loader from 'src/components/common/base/loader';\nimport { TransactionHistoryTable } from 'src/components/transaction/table-list';\nimport './index.less';\n\nclass TransactionHistoryPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      transaction: [],\n      limit: 10,\n      total: 0,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async onChange(pagination, filters, sorter) {\n    const oldState = this.state;\n    await this.setState(getSearchData(pagination, filters, sorter, oldState));\n    this.getData();\n  }\n\n  async getData() {\n    const {\n      filter,\n      limit,\n      offset,\n      sortBy,\n      sort\n    } = this.state;\n\n    try {\n      const resp = await transactionService.search(_objectSpread(_objectSpread({}, filter), {}, {\n        limit,\n        offset,\n        sortBy,\n        sort\n      }));\n      await this.setState({\n        transaction: resp.data.data,\n        total: resp.data.total\n      });\n    } catch (e) {\n      const err = Promise.resolve(e);\n      message.error(getResponseError(err));\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      transaction,\n      total,\n      limit\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Transaction History\")), __jsx(\"div\", {\n      className: \"transaction-history-page\"\n    }, __jsx(PageHeader, {\n      title: \"Transaction History\"\n    }), __jsx(\"div\", null, loading ? __jsx(Loader, null) : __jsx(TransactionHistoryTable, {\n      rowKey: \"_id\",\n      transactions: transaction,\n      pageSize: limit,\n      total: total,\n      onChange: this.onChange.bind(this)\n    }))));\n  }\n\n}\n\n_defineProperty(TransactionHistoryPage, \"authenticate\", true);\n\n_defineProperty(TransactionHistoryPage, \"layout\", 'primary');\n\nexport default TransactionHistoryPage;","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/pages/account/user/transaction-history/index.tsx"],"names":["message","PageHeader","Head","React","PureComponent","transactionService","getResponseError","getSearchData","Loader","TransactionHistoryTable","TransactionHistoryPage","constructor","props","state","loading","transaction","limit","total","offset","sortBy","sort","filter","componentDidMount","getData","onChange","pagination","filters","sorter","oldState","setState","resp","search","data","e","err","Promise","resolve","error","render","bind"],"mappings":"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","sourcesContent":["import { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport React, { PureComponent } from 'react';\nimport { transactionService } from 'src/services';\nimport { ITransaction, ISearch } from 'src/interfaces';\nimport { getResponseError, getSearchData } from '@lib/utils';\nimport Loader from 'src/components/common/base/loader';\nimport { TransactionHistoryTable } from 'src/components/transaction/table-list';\nimport './index.less';\n\ninterface IProps {}\ninterface IState extends ISearch {\n  loading: boolean;\n  transaction: ITransaction[];\n  filter?: {};\n  total: number;\n}\n\nclass TransactionHistoryPage extends PureComponent<IProps, IState> {\n  static authenticate = true;\n\n  static layout = 'primary';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      transaction: [],\n      limit: 10,\n      total: 0,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async onChange(pagination, filters, sorter) {\n    const oldState = this.state;\n    await this.setState(getSearchData(pagination, filters, sorter, oldState));\n    this.getData();\n  }\n\n  async getData() {\n    const {\n      filter, limit, offset, sortBy, sort\n    } = this.state;\n    try {\n      const resp = await transactionService.search({\n        ...filter,\n        limit,\n        offset,\n        sortBy,\n        sort\n      });\n      await this.setState({ transaction: resp.data.data, total: resp.data.total });\n    } catch (e) {\n      const err = Promise.resolve(e);\n      message.error(getResponseError(err));\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const {\n      loading, transaction, total, limit\n    } = this.state;\n    return (\n      <>\n        <Head>\n          <title>Transaction History</title>\n        </Head>\n        <div className=\"transaction-history-page\">\n          <PageHeader title=\"Transaction History\" />\n          <div>\n            {loading ? (\n              <Loader />\n            ) : (\n              <TransactionHistoryTable\n                rowKey=\"_id\"\n                transactions={transaction}\n                pageSize={limit}\n                total={total}\n                onChange={this.onChange.bind(this)}\n              />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default TransactionHistoryPage;\n"]},"metadata":{},"sourceType":"module"}