{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n// import { studioService } from 'src/services';\nimport { Button, message } from 'antd';\nimport React from 'react';\nimport { getResponseError } from 'src/lib';\nexport default (function (_ref) {\n  var member = _ref.member,\n      updateMemberStatus = _ref.updateMemberStatus;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      processing = _React$useState2[0],\n      setProcessing = _React$useState2[1];\n\n  var handleChangeStatus = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(m) {\n      var err;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // window.confirm\n              setProcessing(true); // const resp = await studioService.updateMemberStatus(\n              //   m._id,\n              //   m.status === 'active' ? 'inactive' : 'active'\n              // );\n\n              updateMemberStatus(m._id);\n              message.success('Update Success');\n              _context.next = 12;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              _context.next = 10;\n              return Promise.resolve(_context.t0);\n\n            case 10:\n              err = _context.sent;\n              message.error(getResponseError(err));\n\n            case 12:\n              _context.prev = 12;\n              setProcessing(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6, 12, 15]]);\n    }));\n\n    return function handleChangeStatus(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Button, {\n    type: member.status === 'active' ? 'default' : 'primary',\n    onClick: function onClick() {\n      return handleChangeStatus(member);\n    },\n    loading: processing,\n    disabled: processing\n  }, member.status === 'active' ? 'Inactive' : 'Active');\n});","map":null,"metadata":{},"sourceType":"module"}