{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/iframe-has-title */\n\n/* eslint-disable react/no-danger */\n\n/* eslint-disable dot-notation */\nimport React, { PureComponent } from 'react';\nimport Head from 'next/head';\nimport { Row, Col, message, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { camAggregatorService } from '@services/cam-aggregator.service';\nimport { getResponseError } from '@lib/utils';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport AggregatorProfileGridCard from '@components/cam-aggregator/grid-card';\nimport './details.less';\nimport Link from 'next/link';\nimport Title from 'antd/lib/typography/Title';\nimport Loader from '@components/common/base/loader';\nimport { backToTop } from '@lib/layout';\n\nvar CamaggregatorDetails = /*#__PURE__*/function (_PureComponent) {\n  _inherits(CamaggregatorDetails, _PureComponent);\n\n  var _super = _createSuper(CamaggregatorDetails);\n\n  function CamaggregatorDetails() {\n    var _this;\n\n    _classCallCheck(this, CamaggregatorDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      relatedCams: [],\n      loading: true\n    });\n\n    return _this;\n  }\n\n  _createClass(CamaggregatorDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRelatedCams();\n      backToTop();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var performer = this.props.performer;\n\n      if (performer !== prevProps.performer) {\n        this.getRelatedCams();\n        backToTop();\n      }\n    }\n  }, {\n    key: \"getRelatedCams\",\n    value: function () {\n      var _getRelatedCams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var performer, resp, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.setState({\n                  loading: true\n                });\n\n              case 3:\n                performer = this.props.performer;\n                _context.next = 6;\n                return camAggregatorService.related(performer.username);\n\n              case 6:\n                resp = _context.sent;\n                _context.next = 9;\n                return this.setState({\n                  relatedCams: resp.data\n                });\n\n              case 9:\n                _context.next = 17;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 15;\n                return Promise.resolve(_context.t0);\n\n              case 15:\n                err = _context.sent;\n                message.error(getResponseError(err));\n\n              case 17:\n                _context.prev = 17;\n                this.setState({\n                  loading: false\n                });\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11, 17, 20]]);\n      }));\n\n      function getRelatedCams() {\n        return _getRelatedCams.apply(this, arguments);\n      }\n\n      return getRelatedCams;\n    }()\n  }, {\n    key: \"_renderRelatedCams\",\n    value: function _renderRelatedCams() {\n      var relatedCams = this.state.relatedCams;\n      return relatedCams !== null && relatedCams !== void 0 && relatedCams.length ? __jsx(PerformerGrid, {\n        total: relatedCams.length,\n        data: relatedCams,\n        success: true,\n        searching: false,\n        gridCard: AggregatorProfileGridCard\n      }) : null;\n    }\n  }, {\n    key: \"_renderIframe\",\n    value: function _renderIframe(iframe) {\n      var newSrc = iframe;\n\n      if (/(<([^>]+)>)/i.test(iframe)) {\n        var matches = iframe.match(/\\bhttps?:\\/\\/\\S+/gi);\n        if (!matches.length) return null; // eslint-disable-next-line prefer-destructuring\n\n        newSrc = matches[0];\n      }\n\n      return __jsx(\"iframe\", {\n        src: newSrc,\n        style: {\n          width: '100%',\n          border: 'none'\n        },\n        height: \"500\",\n        frameBorder: \"none\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _performer$tags;\n\n      var _this$props = this.props,\n          performer = _this$props.performer,\n          ui = _this$props.ui;\n      var loading = this.state.loading;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\".concat(ui === null || ui === void 0 ? void 0 : ui.siteName, \" | \").concat(performer === null || performer === void 0 ? void 0 : performer.username))), __jsx(Loader, {\n        spinning: loading,\n        fullScreen: true\n      }), __jsx(Row, {\n        className: \"cams-details\"\n      }, __jsx(Col, {\n        md: 6,\n        xs: 24\n      }, __jsx(\"div\", {\n        className: \"profile-card\"\n      }, __jsx(\"div\", {\n        className: \"avatar\"\n      }, performer.avatar && __jsx(\"img\", {\n        src: performer.avatar,\n        alt: performer.username,\n        style: {\n          objectFit: 'contain'\n        }\n      })), __jsx(\"div\", {\n        className: \"profile\"\n      }, __jsx(\"div\", {\n        className: \"name\"\n      }, __jsx(\"span\", {\n        className: \"lable\"\n      }, \"Username: \"), __jsx(\"span\", {\n        className: \"\",\n        style: {\n          textTransform: 'capitalize'\n        }\n      }, __jsx(\"a\", {\n        href: performer.profileLink,\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, performer.username))), __jsx(\"div\", {\n        className: \"gender\"\n      }, __jsx(\"span\", {\n        className: \"lable\"\n      }, \"Gender: \"), __jsx(\"span\", {\n        className: \"\",\n        style: {\n          textTransform: 'capitalize'\n        }\n      }, performer.gender)), performer.age ? __jsx(\"div\", {\n        className: \"age\"\n      }, __jsx(\"span\", {\n        className: \"lable\"\n      }, \"Age: \"), __jsx(\"span\", {\n        className: \"\",\n        style: {\n          textTransform: 'capitalize'\n        }\n      }, performer.age)) : null, __jsx(\"div\", {\n        className: \"bio\"\n      }, __jsx(\"span\", null, performer.aboutMe)), __jsx(\"br\", null), (_performer$tags = performer.tags) !== null && _performer$tags !== void 0 && _performer$tags.length ? __jsx(React.Fragment, null, __jsx(\"p\", null, \"What We do on webcam\"), __jsx(\"div\", {\n        className: \"tags\"\n      }, performer.tags.map(function (tag) {\n        return __jsx(Link, {\n          href: {\n            pathname: '/cams',\n            query: {\n              tag: tag\n            }\n          },\n          key: tag,\n          as: \"/cams?tag=\".concat(tag)\n        }, __jsx(\"a\", null, \"#\", tag));\n      }))) : null), __jsx(Button, {\n        type: \"primary\",\n        className: \"custom-button\",\n        href: performer.profileLink\n      }, __jsx(\"span\", null, \"START LIVE SEX SHOW WITH \".concat(performer.username))))), __jsx(Col, {\n        md: 18,\n        xs: 24\n      }, performer.iframe ? this._renderIframe(performer.iframe) : this._renderRelatedCams()), __jsx(Title, null, \"Related Cams\"), performer.iframe ? this._renderRelatedCams() : null));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var ctx, query, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context2.prev = 1;\n                query = ctx.query;\n                _context2.next = 5;\n                return camAggregatorService.profile(query.username);\n\n              case 5:\n                resp = _context2.sent;\n\n                if (!true) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                if (resp.data) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Router.push('/cams'));\n\n              case 9:\n                if (!resp.data.iframe) {\n                  message.info('Please few minutes to profile');\n                  Router.push(\"\".concat(resp.data.profileLink));\n                }\n\n                if (resp.data.iframe) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Router.push({\n                  pathname: '/stream',\n                  query: {\n                    performer: JSON.stringify(resp.data)\n                  }\n                }, \"/profile/\".concat(resp.data.username)));\n\n              case 12:\n                return _context2.abrupt(\"return\", {\n                  performer: resp.data\n                });\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (!true) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Router.push('/cams'));\n\n              case 19:\n                ctx.res.writeHead && ctx.res.writeHead(302, {\n                  Location: '/cams'\n                });\n                ctx.res.end && ctx.res.end();\n                return _context2.abrupt(\"return\", {});\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 15]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CamaggregatorDetails;\n}(PureComponent);\n\n_defineProperty(CamaggregatorDetails, \"authenticate\", false);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ui: state.ui\n  };\n};\n\nexport default connect(mapStateToProps)(CamaggregatorDetails);","map":null,"metadata":{},"sourceType":"module"}