{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport { Row, Col } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { getMembers, updateMemberStatus } from 'src/redux/studio/actions';\nimport StudioModelsSearch from '@components/studio/models-manager/search-online-status';\nimport StudioModelsTable from '@components/studio/models-manager/studio-models-table';\nimport { connect } from 'react-redux';\nimport './index.less';\nimport { getSearchData } from 'src/lib';\n\nclass StudioModelsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      limit: 12,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getMembers: dispatchGetMembers\n    } = this.props;\n    dispatchGetMembers(this.state);\n  }\n\n  componentDidUpdate(_, prevStates) {\n    const {\n      getMembers: dispatchGetMembers\n    } = this.props;\n\n    if (prevStates !== this.state) {\n      dispatchGetMembers(this.state);\n    }\n  }\n\n  handleTableChange(pagination, filters, sorter) {\n    const oldState = this.state;\n    this.setState(getSearchData(pagination, filters, sorter, oldState));\n  }\n\n  onSearch(data) {\n    this.setState(data);\n  }\n\n  render() {\n    const {\n      data,\n      searching,\n      total,\n      updateMemberStatus: updateMember,\n      placeholderAvatarUrl\n    } = this.props;\n    const {\n      limit\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Studio's Models\")), __jsx(\"div\", {\n      className: \"studio-models-background\"\n    }, __jsx(PageHeader, {\n      title: \"Models\",\n      extra: __jsx(Link, {\n        href: \"/studio/models/add\"\n      }, __jsx(\"a\", null, \"Add new member\"))\n    }), __jsx(\"div\", {\n      className: \"studio-models-box\"\n    }, __jsx(Row, null, __jsx(Col, {\n      xs: 24,\n      sm: 12\n    }, __jsx(StudioModelsSearch, {\n      searching: searching,\n      onSearch: this.onSearch.bind(this)\n    })), __jsx(Col, {\n      xs: 24,\n      sm: 12\n    })), __jsx(StudioModelsTable, {\n      data: data,\n      searching: searching,\n      total: total,\n      updateMemberStatus: updateMember,\n      onChange: this.handleTableChange.bind(this),\n      pageSize: limit,\n      placeholderAvatarUrl: placeholderAvatarUrl\n    }))));\n  }\n\n}\n\n_defineProperty(StudioModelsPage, \"authenticate\", 'studio');\n\n_defineProperty(StudioModelsPage, \"layout\", 'primary');\n\nconst mapStateToProps = state => _objectSpread(_objectSpread({}, state.studio.members), {}, {\n  placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n});\n\nconst mapDispatchs = {\n  getMembers,\n  updateMemberStatus\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioModelsPage);","map":null,"metadata":{},"sourceType":"module"}