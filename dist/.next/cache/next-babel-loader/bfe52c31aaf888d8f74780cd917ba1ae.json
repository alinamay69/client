{"ast":null,"code":"var __jsx = React.createElement;\nimport { Form, Input, Select, Button, Tag, Space } from 'antd';\nimport React, { PureComponent } from 'react';\nimport Page from '@components/common/layout/page';\nimport './detail.less';\nimport { OrderStatus } from 'src/components/order';\nimport { PerformerUsername } from '@components/performer';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport Router from 'next/router';\nexport class FormOrder extends PureComponent {\n  render() {\n    var _order$userInfo;\n\n    const {\n      order,\n      loading,\n      isUpdating,\n      disableUpdate,\n      onFinish,\n      isUser\n    } = this.props;\n    return __jsx(Page, null, order && __jsx(\"div\", {\n      className: \"main-container\"\n    }, __jsx(Form, {\n      onFinish: onFinish,\n      wrapperCol: {\n        sm: {\n          span: 18\n        }\n      },\n      labelCol: {\n        sm: {\n          span: 6\n        }\n      },\n      initialValues: order,\n      id: \"form-update-order\"\n    }, __jsx(Form.Item, {\n      wrapperCol: {\n        sm: {\n          span: 12\n        }\n      }\n    }, __jsx(Tag, {\n      color: \"magenta\"\n    }, \"#\", order.orderNumber)), __jsx(Form.Item, {\n      label: \"User\"\n    }, (order === null || order === void 0 ? void 0 : (_order$userInfo = order.userInfo) === null || _order$userInfo === void 0 ? void 0 : _order$userInfo.username) || 'N/A'), __jsx(Form.Item, {\n      label: \"Performer\"\n    }, order !== null && order !== void 0 && order.performerInfo ? __jsx(PerformerUsername, {\n      performer: order.performerInfo\n    }) : 'N/A'), __jsx(Form.Item, {\n      label: \"Product\"\n    }, order.productsInfo && order.productsInfo.length && order.productsInfo[0].name), __jsx(Form.Item, {\n      label: \"Quantity\"\n    }, order.quantity), __jsx(Form.Item, {\n      label: \"Total Price\"\n    }, __jsx(NumberFormat, {\n      value: order.totalPrice,\n      suffix: \" tokens\"\n    })), __jsx(Form.Item, {\n      label: \"Delivery Address\"\n    }, order.deliveryAddress || 'N/A'), __jsx(Form.Item, {\n      label: \"Delivery Postal Code\"\n    }, order.postalCode || 'N/A'), __jsx(Form.Item, {\n      name: \"shippingCode\",\n      label: \"Shipping Code\"\n    }, !isUser ? __jsx(Input, {\n      placeholder: \"Enter shipping code here\"\n    }) : order.shippingCode), !disableUpdate ? __jsx(Form.Item, {\n      name: \"deliveryStatus\",\n      label: \"Delivery Status\"\n    }, __jsx(Select, null, __jsx(Select.Option, {\n      key: \"processing\",\n      value: \"processing\"\n    }, \"Processing\"), __jsx(Select.Option, {\n      key: \"shipping\",\n      value: \"shipping\"\n    }, \"Shipping\"), __jsx(Select.Option, {\n      key: \"delivered\",\n      value: \"delivered\"\n    }, \"Delivered\"), __jsx(Select.Option, {\n      key: \"refunded\",\n      value: \"refunded\"\n    }, \"Refunded\"))) : __jsx(Form.Item, {\n      name: \"deliveryStatus\",\n      label: \"Delivery Status\"\n    }, __jsx(OrderStatus, {\n      status: order.deliveryStatus\n    })), __jsx(Form.Item, null, __jsx(Space, null, __jsx(Button, {\n      type: \"primary\",\n      onClick: () => Router.back()\n    }, \"Back\"), __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: isUpdating,\n      disabled: loading,\n      hidden: disableUpdate\n    }, \"Update\"))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}