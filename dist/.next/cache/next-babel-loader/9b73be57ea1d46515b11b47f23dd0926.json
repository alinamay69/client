{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nvar StreamingChatUsers = function StreamingChatUsers(_ref) {\n  var loggedIn = _ref.loggedIn,\n      members = _ref.members,\n      currentPerformer = _ref.currentPerformer,\n      blockUser = _ref.blockUser,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n\n  var UserMenu = function UserMenu(_ref2) {\n    var id = _ref2.id;\n    return __jsx(Menu, null, __jsx(Menu.Item, {\n      onClick: function onClick() {\n        return blockUser(id);\n      }\n    }, __jsx(\"span\", null, __jsx(StopOutlined, {\n      size: 16\n    }), ' ', \"Block this user\")));\n  };\n\n  return __jsx(\"div\", {\n    className: \"conversation-users\"\n  }, __jsx(\"div\", {\n    className: \"users\"\n  }, members.length > 0 && members.map(function (m) {\n    return __jsx(\"div\", {\n      className: \"user\",\n      key: m._id\n    }, loggedIn && currentPerformer && currentPerformer._id ? __jsx(Dropdown, {\n      overlay: __jsx(UserMenu, {\n        id: m._id\n      }),\n      placement: \"bottomLeft\",\n      trigger: ['hover', 'click']\n    }, __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || placeholderAvatarUrl,\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username, ' ', __jsx(DownOutlined, null))) : __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || '/default-user-icon.png',\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username));\n  })));\n};\n\nvar mapStates = function mapStates(state) {\n  return {\n    placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n  };\n};\n\nvar mapDispatch = {};\nexport default connect(mapStates, mapDispatch)(StreamingChatUsers);","map":null,"metadata":{},"sourceType":"module"}