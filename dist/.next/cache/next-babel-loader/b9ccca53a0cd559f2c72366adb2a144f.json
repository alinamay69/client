{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { message, Tabs } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport { getResponseError } from '@lib/utils';\nimport Router from 'next/router';\nimport PasswordChange from '@components/auth/password-change';\nimport StudioInformation from '@components/studio/account-information';\nimport StudioPaymentInfoForm from '@components/studio/studio-payment-info-form';\nimport StudioDirectDipositForm from '@components/studio/studio-direct-deposit-form';\nimport StudioPaxumForm from '@components/studio/studio-paxum-form';\nimport StudioBitpayForm from '@components/studio/studio-bitpay-form';\nimport CommissionCard, { ROLE } from '@components/commission/commission-card';\nimport { updateStudio, updateStudioPaymentInfo, updateStudioDirectDeposit, updateStudioPaxum, updateStudioBitpay } from 'src/redux/studio/actions';\nimport { updatePassword } from 'src/redux/auth/actions';\nimport { connect } from 'react-redux';\nimport { omit } from 'lodash';\n\nvar StudioProfilePage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StudioProfilePage, _PureComponent);\n\n  var _super = _createSuper(StudioProfilePage);\n\n  function StudioProfilePage(props) {\n    _classCallCheck(this, StudioProfilePage);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(StudioProfilePage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          success = _this$props.success,\n          errorInfo = _this$props.errorInfo,\n          auth = _this$props.auth;\n\n      if (prevProps.success !== success && success) {\n        message.success('Update Profile Success.');\n      }\n\n      if (prevProps.errorInfo !== errorInfo && errorInfo) {\n        message.error(getResponseError(errorInfo));\n      }\n\n      if (prevProps.auth.updatePassword.success !== auth.updatePassword.success && auth.updatePassword.success) {\n        message.success('Update Password Success.');\n      }\n\n      if (prevProps.auth.updatePassword.error !== auth.updatePassword.error && auth.updatePassword.error) {\n        message.error(getResponseError(auth.updatePassword.error));\n      }\n    }\n  }, {\n    key: \"onTabsChange\",\n    value: function onTabsChange(key) {\n      Router.push({\n        pathname: '/studio/account-settings',\n        query: {\n          action: key\n        }\n      }, \"/studio/account-settings?action=\".concat(key), {\n        shallow: false\n      });\n    }\n  }, {\n    key: \"onFinish\",\n    value: function onFinish(data) {\n      var _this$props2 = this.props,\n          studio = _this$props2.studio,\n          dispatchUpdateStudio = _this$props2.updateStudio;\n      dispatchUpdateStudio(_objectSpread(_objectSpread({}, omit(studio, ['bankTransferOption', 'bitpay'])), data));\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(data) {\n      var dispatchUpdatePassword = this.props.updatePassword;\n      dispatchUpdatePassword(_objectSpread({\n        source: 'studio'\n      }, data));\n    }\n  }, {\n    key: \"onPaymentInfoChange\",\n    value: function onPaymentInfoChange(data) {\n      var dispatchUpdateStudioPaymentInfo = this.props.updateStudioPaymentInfo;\n      dispatchUpdateStudioPaymentInfo(data);\n    }\n  }, {\n    key: \"onDirectDepositChange\",\n    value: function onDirectDepositChange(data) {\n      var dispatchUpdateStudioDirectDeposit = this.props.updateStudioDirectDeposit;\n      dispatchUpdateStudioDirectDeposit(data);\n    }\n  }, {\n    key: \"onPaxumChange\",\n    value: function onPaxumChange(data) {\n      var dispatchUpdateStudioPaxum = this.props.updateStudioPaxum;\n      dispatchUpdateStudioPaxum(data);\n    }\n  }, {\n    key: \"onBitpayChange\",\n    value: function onBitpayChange(data) {\n      var dispatchUpdateStudioBitpay = this.props.updateStudioBitpay;\n      dispatchUpdateStudioBitpay(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          action = _this$props3.action,\n          updating = _this$props3.updating,\n          studio = _this$props3.studio,\n          countries = _this$props3.countries;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Account Settings\")), __jsx(\"div\", {\n        className: \"studio-main-background\"\n      }, __jsx(PageHeader, {\n        title: \"Account Settings\"\n      }), __jsx(Tabs, {\n        defaultActiveKey: action || 'account-information',\n        style: {\n          padding: '0 24px'\n        },\n        size: \"large\",\n        onChange: this.onTabsChange.bind(this)\n      }, __jsx(Tabs.TabPane, {\n        key: \"account-information\",\n        tab: \"Account Information\"\n      }, __jsx(StudioInformation, _extends({}, studio, {\n        countries: countries,\n        onFinish: this.onFinish.bind(this),\n        loading: updating\n      }))), __jsx(Tabs.TabPane, {\n        key: \"change-password\",\n        tab: \"Change Password\"\n      }, __jsx(PasswordChange, {\n        onFinish: this.onPasswordChange.bind(this),\n        submiting: updating\n      })), __jsx(Tabs.TabPane, {\n        tab: \"(%) Commission\",\n        key: \"commission\"\n      }, __jsx(CommissionCard, {\n        role: ROLE.STUDIO\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Payment Info\",\n        key: \"paymentInfo\"\n      }, __jsx(StudioPaymentInfoForm, {\n        loading: updating,\n        onFinish: this.onPaymentInfoChange.bind(this),\n        studio: studio\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Direct Deposit\",\n        key: \"directDeposit\"\n      }, __jsx(StudioDirectDipositForm, {\n        loading: updating,\n        onFinish: this.onDirectDepositChange.bind(this),\n        studio: studio\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Paxum\",\n        key: \"paxum\"\n      }, __jsx(StudioPaxumForm, {\n        loading: updating,\n        onFinish: this.onPaxumChange.bind(this),\n        studio: studio\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Bitpay\",\n        key: \"bitpay\"\n      }, __jsx(StudioBitpayForm, {\n        loading: updating,\n        onFinish: this.onBitpayChange.bind(this),\n        studio: studio\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var ctx = _ref.ctx;\n      var query = ctx.query;\n      return {\n        action: query.action\n      };\n    }\n  }]);\n\n  return StudioProfilePage;\n}(PureComponent);\n\n_defineProperty(StudioProfilePage, \"authenticate\", true);\n\n_defineProperty(StudioProfilePage, \"layout\", 'primary');\n\nvar mapStates = function mapStates(state) {\n  return {\n    auth: state.auth,\n    studio: state.studio.current,\n    updating: state.studio.updatingStudio,\n    success: state.studio.updateStudioSuccess,\n    countries: state.settings.countries,\n    errorInfo: state.studio.updateStudioError\n  };\n};\n\nvar mapDispatch = {\n  updateStudio: updateStudio,\n  updateStudioPaymentInfo: updateStudioPaymentInfo,\n  updateStudioDirectDeposit: updateStudioDirectDeposit,\n  updateStudioPaxum: updateStudioPaxum,\n  updateStudioBitpay: updateStudioBitpay,\n  updatePassword: updatePassword\n};\nexport default connect(mapStates, mapDispatch)(StudioProfilePage);","map":null,"metadata":{},"sourceType":"module"}