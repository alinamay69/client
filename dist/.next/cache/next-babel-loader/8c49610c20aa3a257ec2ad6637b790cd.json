{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getAge } from 'src/lib';\nimport { Table, Tag } from 'antd';\nimport React from 'react';\nimport Button from './button-update-status-member';\n\nvar StudioModelsTable = function StudioModelsTable(_ref) {\n  var data = _ref.data,\n      searching = _ref.searching,\n      total = _ref.total,\n      pageSize = _ref.pageSize,\n      updateMemberStatus = _ref.updateMemberStatus,\n      onChange = _ref.onChange,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n  var columns = [{\n    title: 'Avatar',\n    key: 'avatar',\n    dataIndex: 'avatar',\n    render: function render(avatar) {\n      return __jsx(\"img\", {\n        src: avatar || placeholderAvatarUrl || '/no-avatar.png',\n        style: {\n          width: '100px '\n        },\n        alt: \"\"\n      });\n    }\n  }, {\n    title: 'Email',\n    key: 'email',\n    dataIndex: 'email'\n  }, {\n    title: 'Username',\n    key: 'username',\n    dataIndex: 'username'\n  }, {\n    title: 'Age',\n    key: 'age',\n    dataIndex: 'dateOfBirth',\n    render: function render(dateOfBirth) {\n      return getAge(dateOfBirth);\n    }\n  }, {\n    title: 'Gender',\n    key: 'gender',\n    dataIndex: 'gender'\n  }, {\n    title: 'Country',\n    key: 'country',\n    dataIndex: 'country'\n  }, // {\n  //   title: 'Total Stream Time',\n  //   key: 'totalStreamTime',\n  //   render(record) {\n  //     return <span>{converDuration(record.stats.totalStreamTime)}</span>;\n  //   }\n  // },\n  // {\n  //   title: 'Earned',\n  //   key: 'totalTokenEarned',\n  //   render(record) {\n  //     return <span>${record.stats.totalTokenEarned}</span>;\n  //   }\n  // },\n  {\n    title: 'Status',\n    key: 'status',\n    dataIndex: 'status',\n    render: function render(status) {\n      switch (status) {\n        case 'active':\n          return __jsx(Tag, {\n            color: \"green\"\n          }, \"Active\");\n\n        case 'inactive':\n          return __jsx(Tag, {\n            color: \"Red\"\n          }, \"Inactive\");\n\n        case 'pending':\n          return __jsx(Tag, {\n            color: \"orange\"\n          }, \"Pending\");\n\n        default:\n          return __jsx(Tag, {\n            color: \"orange\"\n          }, \"Pending\");\n      }\n    }\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    render: function render(member) {\n      return __jsx(Button, {\n        member: member,\n        updateMemberStatus: updateMemberStatus\n      });\n    }\n  }];\n  var dataSource = data.map(function (d) {\n    return _objectSpread(_objectSpread({}, d), {}, {\n      key: d._id\n    });\n  });\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    loading: searching,\n    pagination: {\n      pageSize: pageSize,\n      total: total\n    },\n    onChange: onChange,\n    scroll: {\n      x: true\n    }\n  });\n};\n\nStudioModelsTable.defaultProps = {\n  placeholderAvatarUrl: ''\n};\nexport default StudioModelsTable;","map":null,"metadata":{},"sourceType":"module"}