{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Row, Col, Drawer, Button, Menu, Space } from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport classnames from 'classnames';\nimport './aggeregator-filter.less';\n\nvar AggregatorFilter = function AggregatorFilter(_ref) {\n  _s();\n\n  var categories = _ref.categories,\n      setFilter = _ref.setFilter,\n      countries = _ref.countries,\n      category = _ref.category,\n      country = _ref.country,\n      gender = _ref.gender,\n      clearFilter = _ref.clearFilter;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    align: \"middle\",\n    className: \"performer-filter\",\n    justify: \"space-between\"\n  }, __jsx(Col, null, __jsx(Button, {\n    icon: __jsx(FilterOutlined, null),\n    type: \"primary\",\n    onClick: function onClick() {\n      return setVisible(true);\n    },\n    className: \"mr-8\"\n  }, \"Filter\"), __jsx(Space, {\n    className: \"ant-space-wrap\"\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, \"Popular Filter:\"), __jsx(Button, {\n    onClick: clearFilter,\n    className: classnames(gender === '' ? 'active' : ''),\n    type: \"dashed\"\n  }, \"All\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setFilter('gender', gender === 'female' ? '' : 'female');\n    },\n    className: classnames(gender === 'female' ? 'active' : ''),\n    type: \"dashed\"\n  }, \"Female\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setFilter('gender', gender === 'transgender' ? '' : 'transgender');\n    },\n    className: classnames(gender === 'transgender' ? 'active' : ''),\n    type: \"dashed\"\n  }, \"Transgender\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setFilter('gender', gender === 'male' ? '' : 'male');\n    },\n    className: classnames(gender === 'male' ? 'active' : ''),\n    type: \"dashed\"\n  }, \"Male\")))), __jsx(Drawer, {\n    visible: visible,\n    placement: \"left\",\n    onClose: function onClose() {\n      return setVisible(false);\n    },\n    title: __jsx(Row, {\n      justify: \"space-between\",\n      align: \"middle\"\n    }, __jsx(Col, null, \"Filter by:\"), __jsx(Col, null, __jsx(Button, {\n      type: \"link\",\n      onClick: function onClick() {\n        return clearFilter();\n      },\n      size: \"small\",\n      style: {\n        marginRight: 10\n      }\n    }, \"Clear Filter\")))\n  }, __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: function onSelect(_ref2) {\n      var key = _ref2.key;\n      return setFilter('category', key !== 'All' ? key : '');\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('category', '');\n    },\n    selectedKeys: [category]\n  }, __jsx(Menu.SubMenu, {\n    title: \"Category\",\n    key: \"category\"\n  }, __jsx(Menu.Item, {\n    key: \"All\"\n  }, \"All\"), categories.length > 0 && categories.map(function (c) {\n    return __jsx(Menu.Item, {\n      key: c.alias\n    }, c.name);\n  }))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    onSelect: function onSelect(_ref3) {\n      var key = _ref3.key;\n      return setFilter('gender', key);\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('gender', '');\n    },\n    selectedKeys: [gender]\n  }, __jsx(Menu.SubMenu, {\n    title: \"Gender\",\n    key: \"gender\"\n  }, __jsx(Menu.Item, {\n    key: \"female\"\n  }, \"Female\"), __jsx(Menu.Item, {\n    key: \"transgender\"\n  }, \"Transgender\"), __jsx(Menu.Item, {\n    key: \"male\"\n  }, \"Male\"))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: function onSelect(_ref4) {\n      var key = _ref4.key;\n      return setFilter('country', key !== 'All' ? key : '');\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('country', '');\n    },\n    selectedKeys: [country]\n  }, __jsx(Menu.SubMenu, {\n    title: \"Country\",\n    key: \"country\"\n  }, __jsx(Menu.Item, {\n    key: \"All\"\n  }, \"All\"), countries.length > 0 && countries.map(function (c) {\n    return __jsx(Menu.Item, {\n      key: c.code\n    }, c.name);\n  })))));\n};\n\n_s(AggregatorFilter, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = AggregatorFilter;\nAggregatorFilter.defaultProps = {\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  countries: [],\n  country: ''\n};\nexport default AggregatorFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AggregatorFilter\");","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/components/cam-aggregator/aggregator-filter.tsx"],"names":["React","Row","Col","Drawer","Button","Menu","Space","FilterOutlined","classnames","AggregatorFilter","categories","setFilter","countries","category","country","gender","clearFilter","useState","visible","setVisible","fontWeight","marginRight","borderRight","key","length","map","c","alias","name","code","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Row, Col, Drawer, Button, Menu, Space\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport classnames from 'classnames';\nimport './aggeregator-filter.less';\nimport { IAggregatorCategogiesModel } from 'src/interfaces/aggregator-categories';\nimport { ICountries } from 'src/interfaces/setting';\n\ninterface IProps {\n  categories?: IAggregatorCategogiesModel[];\n  // offset?: number;\n  // limit?: number;\n  gender?: string;\n  category?: string;\n  country?: string;\n  setFilter: Function;\n  countries?: ICountries[];\n  clearFilter: () => void;\n}\n\nconst AggregatorFilter = ({\n  categories,\n  setFilter,\n  countries,\n  category,\n  country,\n  gender,\n  clearFilter\n}: IProps) => {\n  const [visible, setVisible] = React.useState(false);\n  return (\n    <>\n      <Row align=\"middle\" className=\"performer-filter\" justify=\"space-between\">\n        <Col>\n          <Button\n            icon={<FilterOutlined />}\n            type=\"primary\"\n            onClick={() => setVisible(true)}\n            className=\"mr-8\"\n          >\n            Filter\n          </Button>\n          <Space className=\"ant-space-wrap\">\n            <span style={{ fontWeight: 'bold' }}>Popular Filter:</span>\n            <Button\n              onClick={clearFilter}\n              className={classnames(gender === '' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              All\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'female' ? '' : 'female')}\n              className={classnames(gender === 'female' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Female\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'transgender' ? '' : 'transgender')}\n              className={classnames(gender === 'transgender' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Transgender\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'male' ? '' : 'male')}\n              className={classnames(gender === 'male' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Male\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      <Drawer\n        visible={visible}\n        placement=\"left\"\n        onClose={() => setVisible(false)}\n        title={(\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>Filter by:</Col>\n            <Col>\n              <Button\n                type=\"link\"\n                onClick={() => clearFilter()}\n                size=\"small\"\n                style={{ marginRight: 10 }}\n              >\n                Clear Filter\n              </Button>\n            </Col>\n          </Row>\n        )}\n      >\n        {/* Select multiple category */}\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('category', key !== 'All' ? key : '')}\n          onDeselect={() => setFilter('category', '')}\n          selectedKeys={[category]}\n        >\n          <Menu.SubMenu title=\"Category\" key=\"category\">\n            <Menu.Item key=\"All\">All</Menu.Item>\n            {categories.length > 0\n              && categories.map((c) => (\n                <Menu.Item key={c.alias}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          onSelect={({ key }) => setFilter('gender', key)}\n          onDeselect={() => setFilter('gender', '')}\n          selectedKeys={[gender]}\n        >\n          <Menu.SubMenu title=\"Gender\" key=\"gender\">\n            <Menu.Item key=\"female\">Female</Menu.Item>\n            <Menu.Item key=\"transgender\">Transgender</Menu.Item>\n            <Menu.Item key=\"male\">Male</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('country', key !== 'All' ? key : '')}\n          onDeselect={() => setFilter('country', '')}\n          selectedKeys={[country]}\n        >\n          <Menu.SubMenu title=\"Country\" key=\"country\">\n            <Menu.Item key=\"All\">All</Menu.Item>\n            {countries.length > 0\n              && countries.map((c) => (\n                <Menu.Item key={c.code}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n      </Drawer>\n    </>\n  );\n};\nAggregatorFilter.defaultProps = {\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  countries: [],\n  country: ''\n};\n\nexport default AggregatorFilter;\n"]},"metadata":{},"sourceType":"module"}