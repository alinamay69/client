{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport './index.less';\nimport React from 'react';\n\nconst PurchasedVideoCard = ({\n  video,\n  performer,\n  onClick\n}) => {\n  var _video$video;\n\n  const {\n    title,\n    thumbnail,\n    _id\n  } = video;\n  return __jsx(\"div\", {\n    className: \"purchased-video-card\"\n  }, __jsx(\"div\", {\n    className: \"purchased-video-card-thumb\"\n  }, __jsx(\"span\", null, __jsx(PlayCircleOutlined, {\n    onClick: onClick\n  })), __jsx(\"img\", {\n    src: thumbnail || ((_video$video = video.video) === null || _video$video === void 0 ? void 0 : _video$video.thumbnails[0]),\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"purchased-video-card-name\"\n  }, __jsx(Link, {\n    href: {\n      pathname: '/videos/detail',\n      query: {\n        id: _id,\n        data: JSON.stringify(_objectSpread(_objectSpread({}, video), {}, {\n          performer\n        }))\n      }\n    },\n    as: `/video/${_id}`\n  }, __jsx(\"a\", null, title))));\n};\n\nexport default PurchasedVideoCard;","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/components/videos/purchased-video-card.tsx"],"names":["Link","PlayCircleOutlined","React","PurchasedVideoCard","video","performer","onClick","title","thumbnail","_id","thumbnails","pathname","query","id","data","JSON","stringify"],"mappings":";;;;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAQA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAA2C;AAAA;;AACpE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAA4BL,KAAlC;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBACE,MAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEE;AAA7B,IADF,CADF,EAIE;AAAK,IAAA,GAAG,EAAEE,SAAS,qBAAIJ,KAAK,CAACA,KAAV,iDAAI,aAAaM,UAAb,CAAwB,CAAxB,CAAJ,CAAnB;AAAmD,IAAA,GAAG,EAAC;AAAvD,IAJF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,gBADN;AAEJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEJ,GAAN;AAAWK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,iCAAoBZ,KAApB;AAA2BC,UAAAA;AAA3B;AAAjB;AAFH,KADR;AAKE,IAAA,EAAE,EAAG,UAASI,GAAI;AALpB,KAOE,iBAAIF,KAAJ,CAPF,CADF,CAPF,CADF;AAqBD,CAvBD;;AAyBA,eAAeJ,kBAAf","sourcesContent":["import { IPerformer, IVideo } from 'src/interfaces';\nimport Link from 'next/link';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport './index.less';\nimport React from 'react';\n\ninterface IProps {\n  video: IVideo;\n  performer: IPerformer;\n  onClick: () => void;\n}\n\nconst PurchasedVideoCard = ({ video, performer, onClick }: IProps) => {\n  const { title, thumbnail, _id } = video;\n  return (\n    <div className=\"purchased-video-card\">\n      <div className=\"purchased-video-card-thumb\">\n        <span>\n          <PlayCircleOutlined onClick={onClick} />\n        </span>\n        <img src={thumbnail || video.video?.thumbnails[0]} alt=\"\" />\n      </div>\n      <div className=\"purchased-video-card-name\">\n        <Link\n          href={{\n            pathname: '/videos/detail',\n            query: { id: _id, data: JSON.stringify({ ...video, performer }) }\n          }}\n          as={`/video/${_id}`}\n        >\n          <a>{title}</a>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PurchasedVideoCard;\n"]},"metadata":{},"sourceType":"module"}