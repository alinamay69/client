{"ast":null,"code":"var __jsx = React.createElement;\nimport { message } from 'antd';\nimport * as React from 'react';\nimport './sound.less';\nexport default class SoundComponent extends React.PureComponent {\n  componentDidMount() {\n    const {\n      soundUrl,\n      volumn\n    } = this.props;\n    const audio = document.createElement('audio');\n    audio.setAttribute('src', soundUrl || '/sounds/default-audio.mp3');\n    audio.setAttribute('id', 'audio');\n    audio.volume = volumn || 0.5;\n    const container = document.querySelector('.sound-player');\n    container.append(audio);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      soundUrl\n    } = this.props;\n\n    if (soundUrl && soundUrl !== prevProps.soundUrl) {\n      let audio = document.getElementById('audio');\n      const container = document.querySelector('.sound-player');\n\n      if (!audio) {\n        audio = document.createElement('audio');\n        audio.setAttribute('id', 'audio');\n        container.append(audio);\n      }\n\n      audio.setAttribute('src', soundUrl || '/sounds/default-audio.mp3');\n    }\n  }\n\n  async play() {\n    const audio = document.getElementById('audio');\n\n    if (audio) {\n      try {\n        await audio.play();\n      } catch (e) {\n        message.error('Sound can not play. Interact with the document first!', 3);\n      }\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"sound-player\"\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/components/common/base/sound.tsx"],"names":["message","React","SoundComponent","PureComponent","componentDidMount","soundUrl","volumn","props","audio","document","createElement","setAttribute","volume","container","querySelector","append","componentDidUpdate","prevProps","getElementById","play","e","error","render"],"mappings":";AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP;AAOA,eAAe,MAAMC,cAAN,SAA6BD,KAAK,CAACE,aAAnC,CAAwD;AACrEC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKC,KAAlC;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,YAAN,CAAmB,KAAnB,EAA0BN,QAAQ,IAAI,2BAAtC;AACAG,IAAAA,KAAK,CAACG,YAAN,CAAmB,IAAnB,EAAyB,OAAzB;AACAH,IAAAA,KAAK,CAACI,MAAN,GAAeN,MAAM,IAAI,GAAzB;AACA,UAAMO,SAAS,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,eAAvB,CAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiBP,KAAjB;AACD;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAmB;AACnC,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKE,KAA1B;;AACA,QAAIF,QAAQ,IAAIA,QAAQ,KAAKY,SAAS,CAACZ,QAAvC,EAAiD;AAC/C,UAAIG,KAAK,GAAGC,QAAQ,CAACS,cAAT,CAAwB,OAAxB,CAAZ;AACA,YAAML,SAAS,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,eAAvB,CAAlB;;AACA,UAAI,CAACN,KAAL,EAAY;AACVA,QAAAA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAR;AACAF,QAAAA,KAAK,CAACG,YAAN,CAAmB,IAAnB,EAAyB,OAAzB;AACAE,QAAAA,SAAS,CAACE,MAAV,CAAiBP,KAAjB;AACD;;AACDA,MAAAA,KAAK,CAACG,YAAN,CACE,KADF,EAEEN,QAAQ,IAAI,2BAFd;AAID;AACF;;AAES,QAAJc,IAAI,GAAG;AACX,UAAMX,KAAK,GAAGC,QAAQ,CAACS,cAAT,CAAwB,OAAxB,CAAd;;AACA,QAAIV,KAAJ,EAAW;AACT,UAAI;AACF,cAAMA,KAAK,CAACW,IAAN,EAAN;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVpB,QAAAA,OAAO,CAACqB,KAAR,CAAc,uDAAd,EAAuE,CAAvE;AACD;AACF;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC;AAAf,MAAP;AACD;;AAzCoE","sourcesContent":["import { message } from 'antd';\nimport * as React from 'react';\nimport './sound.less';\n\ninterface Props {\n  soundUrl?: string;\n  volumn?: number;\n}\n\nexport default class SoundComponent extends React.PureComponent<Props> {\n  componentDidMount() {\n    const { soundUrl, volumn } = this.props;\n    const audio = document.createElement('audio');\n    audio.setAttribute('src', soundUrl || '/sounds/default-audio.mp3');\n    audio.setAttribute('id', 'audio');\n    audio.volume = volumn || 0.5;\n    const container = document.querySelector('.sound-player');\n    container.append(audio);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { soundUrl } = this.props;\n    if (soundUrl && soundUrl !== prevProps.soundUrl) {\n      let audio = document.getElementById('audio');\n      const container = document.querySelector('.sound-player');\n      if (!audio) {\n        audio = document.createElement('audio');\n        audio.setAttribute('id', 'audio');\n        container.append(audio);\n      }\n      audio.setAttribute(\n        'src',\n        soundUrl || '/sounds/default-audio.mp3'\n      );\n    }\n  }\n\n  async play() {\n    const audio = document.getElementById('audio') as HTMLMediaElement;\n    if (audio) {\n      try {\n        await audio.play();\n      } catch (e) {\n        message.error('Sound can not play. Interact with the document first!', 3);\n      }\n    }\n  }\n\n  render() {\n    return <div className=\"sound-player\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}