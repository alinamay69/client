{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { Row, Col, Button, Skeleton } from 'antd';\nimport { FacebookIcon, TwitterIcon, InstagramIcon } from '@components/common/base/icons';\nimport { formatDate, getAge } from 'src/lib';\nimport Link from 'next/link';\nimport './index.less';\n\nconst renderPerformerTags = (tags = []) => tags.map((tag, index) => __jsx(Link, {\n  key: `performer-tag-${tag}`,\n  href: {\n    pathname: '/tag',\n    query: {\n      tags: tag\n    }\n  },\n  as: `/tag/${tag}`\n}, __jsx(\"a\", null, __jsx(\"span\", null, index < tags.length - 1 ? `${tag}, ` : tag))));\n\nconst ProfileCard = ({\n  performer,\n  searching,\n  success,\n  placeholderAvatarUrl\n}) => {\n  const {\n    avatar,\n    username,\n    createdAt,\n    gender,\n    ethnicity,\n    country,\n    height,\n    weight,\n    dateOfBirth,\n    tags,\n    socials,\n    lastStreamingTime,\n    eyes\n  } = performer;\n  return __jsx(\"div\", {\n    className: \"profile-card\"\n  }, searching ? __jsx(Skeleton, {\n    loading: true,\n    paragraph: {\n      rows: 4\n    }\n  }) : success && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"avatar\"\n  }, __jsx(\"img\", {\n    src: avatar || placeholderAvatarUrl,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"profile\"\n  }, __jsx(\"div\", {\n    className: \"name\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Username: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, username)), gender && __jsx(\"div\", {\n    className: \"gender\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Gender: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, gender)), createdAt && __jsx(\"div\", {\n    className: \"created-date\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Member Since: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, formatDate(createdAt, 'MMMM DD, YYYY'))), __jsx(\"div\", {\n    className: \"last-broadcast\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Last Broadcast: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, formatDate(lastStreamingTime, 'LLLL'))), ethnicity && __jsx(\"div\", {\n    className: \"ethinicity\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Ethinicity: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, ethnicity)), dateOfBirth && __jsx(\"div\", {\n    className: \"age\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Age: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, getAge(dateOfBirth))), country && __jsx(\"div\", {\n    className: \"country\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Country: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, country)), height && __jsx(\"div\", {\n    className: \"height\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Height: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, height)), weight && __jsx(\"div\", {\n    className: \"weight\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Weight: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, weight)), eyes && __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"span\", {\n    className: \"lable\"\n  }, \"Eye color: \"), __jsx(\"span\", {\n    className: \"\",\n    style: {\n      textTransform: 'capitalize'\n    }\n  }, eyes))), __jsx(\"br\", null), performer.aboutMe && __jsx(\"p\", null, \"About\", ' ', username), __jsx(\"div\", {\n    className: \"bio\"\n  }, __jsx(\"span\", null, performer.aboutMe)), __jsx(\"br\", null), __jsx(\"p\", null, \"What We do on webcam\"), tags && tags.length > 0 && __jsx(\"div\", {\n    className: \"tags\"\n  }, renderPerformerTags(tags)), performer.schedule && __jsx(\"p\", null, `Working hours of ${performer.username}`), __jsx(Row, {\n    className: \"schedule\"\n  }, performer.schedule && Object.keys(performer.schedule).map(index => __jsx(Col, {\n    sm: {\n      span: 8\n    },\n    xs: {\n      span: 12\n    },\n    key: index\n  }, __jsx(\"span\", {\n    style: {\n      color: '#ff0066',\n      fontWeight: 'bold',\n      textTransform: 'uppercase'\n    }\n  }, `${index}  `), __jsx(\"span\", {\n    style: {\n      color: '#000000',\n      fontWeight: 'bold'\n    }\n  }, performer.schedule[index].start !== '00:00' && performer.schedule[index].end !== '00:00' ? `${performer.schedule[index].start} - ${performer.schedule[index].end}` : 'N/A')))), __jsx(\"br\", null), socials && socials.length > 0 && __jsx(\"p\", null, \"Find Me On\"), __jsx(Row, {\n    className: \"social\",\n    gutter: 10\n  }, socials && socials.facebook && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.facebook,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(FacebookIcon, null)))), socials && socials.twitter && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.twitter,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(TwitterIcon, null)))), socials && socials.instagram && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.instagram,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(InstagramIcon, null)))))));\n};\n\nProfileCard.defaultProps = {\n  searching: false,\n  success: false,\n  placeholderAvatarUrl: '/no-avatar.png'\n};\nexport default ProfileCard;","map":null,"metadata":{},"sourceType":"module"}