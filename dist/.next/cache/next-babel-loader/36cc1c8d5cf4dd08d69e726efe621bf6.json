{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { message, Tabs, Form, Button, Collapse } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { connect } from 'react-redux';\nimport Head from 'next/head';\nimport ContactSettingForm from '@components/performer/contact-setting-form';\nimport PaymentSettingForm from '@components/performer/settings/payment-info-form';\nimport DirectDepositForm from '@components/performer/settings/direct-deposit-form';\nimport BitpayForm from '@components/performer/settings/bitpay-form';\nimport PaxumForm from '@components/performer/settings/paxum-form';\nimport CommissionCard from '@components/commission/commission-card';\nimport DisableAccountForm from '@components/performer/settings/disable-account-form';\nimport DefaultPriceForm from '@components/performer/settings/default-price-form';\nimport { updatePerformerProfile, updatePaymentInfo, updateDirectDeposit, updateBitpay, updatePaxum, updateDefaultPrice } from 'src/redux/performer/actions';\nimport { updatePassword, logout } from 'src/redux/auth/actions';\nimport { getResponseError } from '@lib/utils';\nimport { performerService, authService } from 'src/services';\nimport Router from 'next/router';\nimport PasswordChange from '@components/auth/password-change';\nimport DocumentsSettingForm from '@components/performer/documents-setting-form';\nimport Timezones from '@components/common/base/select/timezones';\nimport { formItemLayout } from '@lib/layout';\nimport BroadcastSetting from '@components/performer/broadcast-setting-form';\nimport './index.less';\nimport { SocketContext } from 'src/socket';\nvar Panel = Collapse.Panel;\n\nvar UserProfilePage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(UserProfilePage, _PureComponent);\n\n  var _super = _createSuper(UserProfilePage);\n\n  function UserProfilePage(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfilePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      updatingMaxPearticipantsAllowed: false\n    };\n    return _this;\n  }\n\n  _createClass(UserProfilePage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          updateSuccess = _this$props.updateSuccess,\n          updateError = _this$props.updateError,\n          auth = _this$props.auth;\n\n      if (prevProps.updateSuccess !== updateSuccess && updateSuccess) {\n        message.success('Update Profile Success.');\n      }\n\n      if (prevProps.updateError !== updateError && updateError) {\n        message.error(getResponseError(updateError));\n      }\n\n      if (prevProps.auth.updatePassword.success !== auth.updatePassword.success && auth.updatePassword.success) {\n        message.success('Update Password Success.');\n      }\n\n      if (prevProps.auth.updatePassword.error !== auth.updatePassword.error && auth.updatePassword.error) {\n        message.error(getResponseError(auth.updatePassword.error));\n      }\n    }\n  }, {\n    key: \"onFinish\",\n    value: function onFinish(data) {\n      var _this$props2 = this.props,\n          performer = _this$props2.performer,\n          dispatchupdatePerformerProfile = _this$props2.updatePerformerProfile;\n      dispatchupdatePerformerProfile(_objectSpread(_objectSpread({}, performer), data));\n    }\n  }, {\n    key: \"onTabsChange\",\n    value: function onTabsChange(key) {\n      Router.push({\n        pathname: '/account/performer/account-settings',\n        query: {\n          action: key\n        }\n      }, \"/account/performer/account-settings?action=\".concat(key), {\n        shallow: false\n      });\n    }\n  }, {\n    key: \"onUpdateBroadcastSetting\",\n    value: function () {\n      var _onUpdateBroadcastSetting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var maxParticipantsAllowed, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                maxParticipantsAllowed = data.maxParticipantsAllowed;\n                _context.prev = 1;\n                this.setState({\n                  updatingMaxPearticipantsAllowed: true\n                });\n                _context.next = 5;\n                return performerService.updateBroadcastSetting({\n                  maxParticipantsAllowed: maxParticipantsAllowed\n                });\n\n              case 5:\n                message.success('Update Broadcast Setting Success.');\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                _context.next = 12;\n                return Promise.resolve(_context.t0);\n\n              case 12:\n                err = _context.sent;\n                message.error(getResponseError(err));\n\n              case 14:\n                _context.prev = 14;\n                this.setState({\n                  updatingMaxPearticipantsAllowed: false\n                });\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8, 14, 17]]);\n      }));\n\n      function onUpdateBroadcastSetting(_x) {\n        return _onUpdateBroadcastSetting.apply(this, arguments);\n      }\n\n      return onUpdateBroadcastSetting;\n    }()\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(data) {\n      var dispatchUpdatePassword = this.props.updatePassword;\n      dispatchUpdatePassword(data);\n    }\n  }, {\n    key: \"onPaymentInfoChange\",\n    value: function onPaymentInfoChange(data) {\n      var dispatchUpdatePaymentInfo = this.props.updatePaymentInfo;\n      dispatchUpdatePaymentInfo(data);\n    }\n  }, {\n    key: \"onDirectDepositChange\",\n    value: function onDirectDepositChange(data) {\n      var dispatchUpdateDirectDeposit = this.props.updateDirectDeposit;\n      dispatchUpdateDirectDeposit(data);\n    }\n  }, {\n    key: \"onPaxumChange\",\n    value: function onPaxumChange(data) {\n      var dispatchUpdatePaxum = this.props.updatePaxum;\n      dispatchUpdatePaxum(data);\n    }\n  }, {\n    key: \"onBitpayChange\",\n    value: function onBitpayChange(data) {\n      var dispatchUpdateBitpay = this.props.updateBitpay;\n      dispatchUpdateBitpay(data);\n    }\n  }, {\n    key: \"onUpdateDefaultPrice\",\n    value: function onUpdateDefaultPrice(data) {\n      var dispatchUpdateDefaultPrice = this.props.updateDefaultPrice;\n      dispatchUpdateDefaultPrice(data);\n    }\n  }, {\n    key: \"onSuspendAccount\",\n    value: function () {\n      var _onSuspendAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var _this$props3, performer, dispatchLogout, auth, socket, token, error;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _this$props3 = this.props, performer = _this$props3.performer, dispatchLogout = _this$props3.logout; // Check password\n\n                _context2.next = 4;\n                return authService.performerLogin({\n                  username: performer.username,\n                  password: data.password\n                });\n\n              case 4:\n                auth = _context2.sent;\n\n                if (!(!auth.data || !auth.data.token)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", message.error(\"Something's gone wrong, please try again later\"));\n\n              case 7:\n                _context2.next = 9;\n                return performerService.suspendAccount(performer._id);\n\n              case 9:\n                socket = this.context;\n                token = authService.getToken();\n\n                if (socket && token) {\n                  socket.disconnect();\n                }\n\n                dispatchLogout();\n                _context2.next = 21;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](0);\n                _context2.next = 19;\n                return Promise.resolve(_context2.t0);\n\n              case 19:\n                error = _context2.sent;\n                message.error(getResponseError(error));\n\n              case 21:\n                return _context2.abrupt(\"return\", undefined);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 15]]);\n      }));\n\n      function onSuspendAccount(_x2) {\n        return _onSuspendAccount.apply(this, arguments);\n      }\n\n      return onSuspendAccount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          performer = _this$props4.performer,\n          action = _this$props4.action,\n          auth = _this$props4.auth,\n          updating = _this$props4.updating,\n          countries = _this$props4.countries;\n      var updatingMaxPearticipantsAllowed = this.state.updatingMaxPearticipantsAllowed;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Account Settings\")), __jsx(\"div\", {\n        className: \"account-setting-page\"\n      }, __jsx(PageHeader, {\n        title: \"Account Settings\"\n      }), __jsx(Tabs, {\n        defaultActiveKey: action || 'commission',\n        style: {\n          padding: '0 24px'\n        },\n        size: \"large\",\n        onChange: this.onTabsChange.bind(this)\n      }, __jsx(Tabs.TabPane, {\n        tab: \"Commission\",\n        key: \"commission\"\n      }, __jsx(CommissionCard, null)), __jsx(Tabs.TabPane, {\n        tab: \"Default Price\",\n        key: \"default-price\"\n      }, __jsx(DefaultPriceForm, _extends({}, performer, {\n        loading: updating,\n        onFinish: this.onUpdateDefaultPrice.bind(this)\n      }))), __jsx(Tabs.TabPane, {\n        tab: \"Documents\",\n        key: \"documents\"\n      }, __jsx(DocumentsSettingForm, {\n        loading: updating,\n        onFinish: this.onFinish.bind(this),\n        performer: performer\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Contact Setting\",\n        key: \"contact-settings\"\n      }, __jsx(ContactSettingForm, _extends({}, performer, {\n        onFinish: this.onFinish.bind(this),\n        loading: updating,\n        countries: countries\n      }))), __jsx(Tabs.TabPane, {\n        tab: \"Broadcast Setting\",\n        key: \"broadcast-settings\"\n      }, __jsx(BroadcastSetting, {\n        maxParticipantsAllowed: performer.maxParticipantsAllowed,\n        onFinish: this.onUpdateBroadcastSetting.bind(this),\n        loading: updatingMaxPearticipantsAllowed\n      })), __jsx(Tabs.TabPane, {\n        tab: \"Payment Info\",\n        key: \"paymentInfo\"\n      }, __jsx(Collapse, {\n        defaultActiveKey: \"payment\"\n      }, __jsx(Panel, {\n        header: \"Payment\",\n        key: \"payment\"\n      }, __jsx(PaymentSettingForm, _extends({}, performer, {\n        loading: updating,\n        onFinish: this.onPaymentInfoChange.bind(this)\n      }))), __jsx(Panel, {\n        header: \"Direct Deposit\",\n        key: \"directDeposit\"\n      }, __jsx(DirectDepositForm, _extends({}, performer, {\n        loading: updating,\n        onFinish: this.onDirectDepositChange.bind(this)\n      }))), __jsx(Panel, {\n        header: \"Paxum\",\n        key: \"paxum\"\n      }, __jsx(PaxumForm, _extends({}, performer, {\n        loading: updating,\n        onFinish: this.onPaxumChange.bind(this)\n      }))), __jsx(Panel, {\n        header: \"Bitpay\",\n        key: \"bitpay\"\n      }, __jsx(BitpayForm, _extends({}, performer, {\n        loading: updating,\n        onFinish: this.onBitpayChange.bind(this)\n      }))))), __jsx(Tabs.TabPane, {\n        key: \"timezone\",\n        tab: \"Timezone\"\n      }, __jsx(\"h3\", null, \"Sometimes the timezone is very important so make sure you alway set up it correctly. We will contact you taking into consideration the time zone and so may the performer do!\"), __jsx(Form, _extends({\n        onFinish: this.onFinish.bind(this),\n        layout: \"vertical\",\n        initialValues: {\n          timezone: performer.timezone\n        }\n      }, formItemLayout), __jsx(Form.Item, {\n        name: \"timezone\",\n        key: \"timezone\",\n        label: \"Timezone\",\n        rules: [{\n          required: true,\n          message: 'Please input your timezone!'\n        }]\n      }, __jsx(Timezones, {\n        autoFocus: true\n      })), __jsx(Form.Item, null, __jsx(Button, {\n        type: \"primary\",\n        disabled: updating,\n        loading: updating,\n        htmlType: \"submit\"\n      }, \"Save Changes\")))), __jsx(Tabs.TabPane, {\n        tab: \"Disable Account\",\n        key: \"disable-account\"\n      }, __jsx(DisableAccountForm, {\n        loading: updating,\n        onFinish: this.onSuspendAccount.bind(this)\n      })), __jsx(Tabs.TabPane, {\n        key: \"change-password\",\n        tab: \"Change Password\"\n      }, __jsx(PasswordChange, _extends({\n        onFinish: this.onPasswordChange.bind(this)\n      }, auth.updatePassword))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var ctx = _ref.ctx;\n      var query = ctx.query;\n      return {\n        action: query.action\n      };\n    }\n  }]);\n\n  return UserProfilePage;\n}(PureComponent);\n\n_defineProperty(UserProfilePage, \"authenticate\", true);\n\n_defineProperty(UserProfilePage, \"layout\", 'primary');\n\nUserProfilePage.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    performer: state.performer.current,\n    updating: state.performer.updating,\n    updateSuccess: state.performer.updateSuccess,\n    updateError: state.performer.updateError,\n    countries: state.settings.countries,\n    auth: state.auth\n  };\n};\n\nvar mapDispatch = {\n  updatePerformerProfile: updatePerformerProfile,\n  logout: logout,\n  updatePaymentInfo: updatePaymentInfo,\n  updatePassword: updatePassword,\n  updateDirectDeposit: updateDirectDeposit,\n  updateBitpay: updateBitpay,\n  updatePaxum: updatePaxum,\n  updateDefaultPrice: updateDefaultPrice\n};\nexport default connect(mapStateToProps, mapDispatch)(UserProfilePage);","map":null,"metadata":{},"sourceType":"module"}