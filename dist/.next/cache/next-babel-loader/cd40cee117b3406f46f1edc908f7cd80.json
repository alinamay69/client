{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class CamAggregatorService extends APIRequest {\n  online(query) {\n    return this.get(this.buildUrl('/cam-aggregator/online', query));\n  }\n\n  categories(query) {\n    return this.get(this.buildUrl('/cam-aggregator/categories', query));\n  }\n\n  profile(username, service) {\n    let s = 's';\n\n    switch (service) {\n      case 'x':\n      case 'xlovecam':\n        s = 'x';\n        break;\n\n      case 'b':\n      case 'bongacams':\n        s = 'b';\n        break;\n\n      case 's':\n      case 'stripcash':\n        s = 's';\n        break;\n\n      case 'c':\n      case 'chaturbate':\n        s = 'c';\n        break;\n\n      default:\n        break;\n    }\n\n    return this.get(service ? `/cam-aggregator/profile/${s}/${username}` : `/cam-aggregator/profile/${username}`);\n  }\n\n  related(username) {\n    return this.get(`/cam-aggregator/${username}/related`);\n  }\n\n}\nexport const camAggregatorService = new CamAggregatorService();","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/services/cam-aggregator.service.ts"],"names":["APIRequest","CamAggregatorService","online","query","get","buildUrl","categories","profile","username","service","s","related","camAggregatorService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,oBAAN,SAAmCD,UAAnC,CAA8C;AACnDE,EAAAA,MAAM,CAACC,KAAD,EAAa;AACjB,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,wBAAd,EAAwCF,KAAxC,CAAT,CAAP;AACD;;AAEDG,EAAAA,UAAU,CAACH,KAAD,EAAa;AACrB,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,4BAAd,EAA4CF,KAA5C,CAAT,CAAP;AACD;;AAEDI,EAAAA,OAAO,CAACC,QAAD,EAAmBC,OAAnB,EAAqC;AAC1C,QAAIC,CAAC,GAAG,GAAR;;AACA,YAAQD,OAAR;AACE,WAAK,GAAL;AAAU,WAAK,UAAL;AACRC,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACF,WAAK,GAAL;AAAU,WAAK,WAAL;AACRA,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACF,WAAK,GAAL;AAAU,WAAK,WAAL;AACRA,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACF,WAAK,GAAL;AAAU,WAAK,YAAL;AACRA,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACF;AAAS;AAbX;;AAeA,WAAO,KAAKN,GAAL,CAASK,OAAO,GAAI,2BAA0BC,CAAE,IAAGF,QAAS,EAA5C,GAAiD,2BAA0BA,QAAS,EAApG,CAAP;AACD;;AAEDG,EAAAA,OAAO,CAACH,QAAD,EAAW;AAChB,WAAO,KAAKJ,GAAL,CAAU,mBAAkBI,QAAS,UAArC,CAAP;AACD;;AA/BkD;AAkCrD,OAAO,MAAMI,oBAAoB,GAAG,IAAIX,oBAAJ,EAA7B","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class CamAggregatorService extends APIRequest {\n  online(query: any) {\n    return this.get(this.buildUrl('/cam-aggregator/online', query as any));\n  }\n\n  categories(query: any) {\n    return this.get(this.buildUrl('/cam-aggregator/categories', query as any));\n  }\n\n  profile(username: string, service?: string) {\n    let s = 's';\n    switch (service) {\n      case 'x': case 'xlovecam':\n        s = 'x';\n        break;\n      case 'b': case 'bongacams':\n        s = 'b';\n        break;\n      case 's': case 'stripcash':\n        s = 's';\n        break;\n      case 'c': case 'chaturbate':\n        s = 'c';\n        break;\n      default: break;\n    }\n    return this.get(service ? `/cam-aggregator/profile/${s}/${username}` : `/cam-aggregator/profile/${username}`);\n  }\n\n  related(username) {\n    return this.get(`/cam-aggregator/${username}/related`);\n  }\n}\n\nexport const camAggregatorService = new CamAggregatorService();\n"]},"metadata":{},"sourceType":"module"}