{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable dot-notation */\n\n/* eslint-disable no-return-assign */\nimport React from 'react';\nimport Popup from '@components/common/base/popup';\nimport videojs from 'video.js';\n\nclass PopupVideoDetail extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"popup\", void 0);\n  }\n\n  handler(src) {\n    let video = document.querySelector('#video');\n\n    if (!video) {\n      video = document.createElement('video');\n      video.setAttribute('id', 'video');\n      video.setAttribute('class', 'video-js');\n      video.setAttribute('autoplay', 'autoplay');\n      document.querySelector('.ant-modal-body').append(video);\n    }\n\n    if (!window['video-player']) {\n      window['video-player'] = videojs('video', {\n        poster: '/xcam-logo-black.png',\n        controls: true\n      });\n    }\n\n    window['video-player'].src({\n      type: 'video/mp4',\n      src\n    });\n    window['video-player'].play(); // window['video'].on()\n  }\n\n  onOk() {\n    window['video-player'] = window['video-player'].pause(); // window['video-player'].poster = '/xcam-logo-black.png';\n\n    this.popup.setVisible(false);\n  }\n\n  showModalBuyAssets(videoUrl) {\n    this.popup.setVisible(true);\n    setTimeout(() => this.handler(videoUrl), 500);\n  }\n\n  render() {\n    return __jsx(Popup, {\n      title: \"Video detail\",\n      ref: ref => this.popup = ref,\n      content: __jsx(React.Fragment, null),\n      onOk: this.onOk.bind(this),\n      onCancel: this.onOk.bind(this)\n    });\n  }\n\n}\n\nexport default PopupVideoDetail;","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/components/videos/popup-video.tsx"],"names":["React","Popup","videojs","PopupVideoDetail","PureComponent","handler","src","video","document","querySelector","createElement","setAttribute","append","window","poster","controls","type","play","onOk","pause","popup","setVisible","showModalBuyAssets","videoUrl","setTimeout","render","ref","bind"],"mappings":";;;;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,aAArC,CAAmD;AAAA;AAAA;;AAAA;AAAA;;AAGjDC,EAAAA,OAAO,CAACC,GAAD,EAAc;AACnB,QAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;;AACA,QAAI,CAACF,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAGC,QAAQ,CAACE,aAAT,CAAuB,OAAvB,CAAR;AACAH,MAAAA,KAAK,CAACI,YAAN,CAAmB,IAAnB,EAAyB,OAAzB;AACAJ,MAAAA,KAAK,CAACI,YAAN,CAAmB,OAAnB,EAA4B,UAA5B;AACAJ,MAAAA,KAAK,CAACI,YAAN,CAAmB,UAAnB,EAA+B,UAA/B;AACAH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CG,MAA1C,CAAiDL,KAAjD;AACD;;AAED,QAAI,CAACM,MAAM,CAAC,cAAD,CAAX,EAA6B;AAC3BA,MAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBX,OAAO,CAAC,OAAD,EAAU;AACxCY,QAAAA,MAAM,EAAE,sBADgC;AAExCC,QAAAA,QAAQ,EAAE;AAF8B,OAAV,CAAhC;AAID;;AAEDF,IAAAA,MAAM,CAAC,cAAD,CAAN,CAAuBP,GAAvB,CAA2B;AAAEU,MAAAA,IAAI,EAAE,WAAR;AAAqBV,MAAAA;AAArB,KAA3B;AACAO,IAAAA,MAAM,CAAC,cAAD,CAAN,CAAuBI,IAAvB,GAlBmB,CAmBnB;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACLL,IAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBA,MAAM,CAAC,cAAD,CAAN,CAAuBM,KAAvB,EAAzB,CADK,CAEL;;AACA,SAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAtB;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,QAAD,EAAmB;AACnC,SAAKH,KAAL,CAAWC,UAAX,CAAsB,IAAtB;AACAG,IAAAA,UAAU,CAAC,MAAM,KAAKnB,OAAL,CAAakB,QAAb,CAAP,EAA+B,GAA/B,CAAV;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,GAAG,EAAGC,GAAD,IAAU,KAAKN,KAAL,GAAaM,GAF9B;AAGE,MAAA,OAAO,EAAE,2BAHX;AAIE,MAAA,IAAI,EAAE,KAAKR,IAAL,CAAUS,IAAV,CAAe,IAAf,CAJR;AAKE,MAAA,QAAQ,EAAE,KAAKT,IAAL,CAAUS,IAAV,CAAe,IAAf;AALZ,MADF;AASD;;AA9CgD;;AAiDnD,eAAexB,gBAAf","sourcesContent":["/* eslint-disable dot-notation */\n/* eslint-disable no-return-assign */\nimport React from 'react';\nimport Popup from '@components/common/base/popup';\nimport videojs from 'video.js';\n\nclass PopupVideoDetail extends React.PureComponent {\n  popup: any;\n\n  handler(src: string) {\n    let video = document.querySelector('#video');\n    if (!video) {\n      video = document.createElement('video');\n      video.setAttribute('id', 'video');\n      video.setAttribute('class', 'video-js');\n      video.setAttribute('autoplay', 'autoplay');\n      document.querySelector('.ant-modal-body').append(video);\n    }\n\n    if (!window['video-player']) {\n      window['video-player'] = videojs('video', {\n        poster: '/xcam-logo-black.png',\n        controls: true\n      });\n    }\n\n    window['video-player'].src({ type: 'video/mp4', src });\n    window['video-player'].play();\n    // window['video'].on()\n  }\n\n  onOk() {\n    window['video-player'] = window['video-player'].pause();\n    // window['video-player'].poster = '/xcam-logo-black.png';\n    this.popup.setVisible(false);\n  }\n\n  showModalBuyAssets(videoUrl: string) {\n    this.popup.setVisible(true);\n    setTimeout(() => this.handler(videoUrl), 500);\n  }\n\n  render() {\n    return (\n      <Popup\n        title=\"Video detail\"\n        ref={(ref) => (this.popup = ref)}\n        content={<></>}\n        onOk={this.onOk.bind(this)}\n        onCancel={this.onOk.bind(this)}\n      />\n    );\n  }\n}\n\nexport default PopupVideoDetail;\n"]},"metadata":{},"sourceType":"module"}