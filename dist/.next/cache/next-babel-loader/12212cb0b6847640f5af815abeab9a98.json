{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Table } from 'antd';\nimport { formatDate } from 'src/lib';\n\nvar ProductsTable = function ProductsTable(_ref) {\n  var paymentTokenHistory = _ref.paymentTokenHistory,\n      searching = _ref.searching,\n      total = _ref.total,\n      pageSize = _ref.pageSize,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'ID',\n    dataIndex: '_id',\n    key: 'id'\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: function render(name, record) {\n      return __jsx(\"span\", null, name || record.type);\n    }\n  }, {\n    title: 'Seller / To',\n    dataIndex: 'sellerId',\n    key: 'sellerId',\n    render: function render(sellerId, record) {\n      var _record$sellerInfo;\n\n      return ((_record$sellerInfo = record.sellerInfo) === null || _record$sellerInfo === void 0 ? void 0 : _record$sellerInfo.username) || 'N/A';\n    }\n  }, {\n    title: 'Tokens',\n    dataIndex: 'totalPrice',\n    key: 'totalPrice',\n    sorter: true\n  }, {\n    title: 'Created At',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    render: function render(date) {\n      return __jsx(\"span\", null, formatDate(date, 'MMMM DD, YYYY HH:mm'));\n    },\n    sorter: true\n  }];\n  var dataSource = paymentTokenHistory.map(function (p) {\n    return _objectSpread(_objectSpread({}, p), {}, {\n      key: p._id\n    });\n  });\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"table\",\n    pagination: {\n      total: total,\n      pageSize: pageSize\n    },\n    showSorterTooltip: false,\n    loading: searching,\n    onChange: onChange\n  });\n};\n\n_c = ProductsTable;\nexport default ProductsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsTable\");","map":{"version":3,"sources":["/Users/frag-games/Desktop/Test Projects/secret-client/src/components/user/payment-token-history-table.tsx"],"names":["React","Table","formatDate","ProductsTable","paymentTokenHistory","searching","total","pageSize","onChange","columns","title","dataIndex","key","render","name","record","type","sellerId","sellerInfo","username","sorter","date","dataSource","map","p","_id"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,SAASC,UAAT,QAA2B,SAA3B;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAMR;AAAA,MALZC,mBAKY,QALZA,mBAKY;AAAA,MAJZC,SAIY,QAJZA,SAIY;AAAA,MAHZC,KAGY,QAHZA,KAGY;AAAA,MAFZC,QAEY,QAFZA,QAEY;AAAA,MADZC,QACY,QADZA,QACY;AACZ,MAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAJF,kBAISC,IAJT,EAIeC,MAJf,EAIuB;AACnB,aAAO,oBAAOD,IAAI,IAAIC,MAAM,CAACC,IAAtB,CAAP;AACD;AANH,GANc,EAcd;AACEN,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACI,QAAD,EAAmBF,MAAnB;AAAA;;AAAA,aAA8B,uBAAAA,MAAM,CAACG,UAAP,0EAAmBC,QAAnB,KAA+B,KAA7D;AAAA;AAJV,GAdc,EAoBd;AACET,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEQ,IAAAA,MAAM,EAAE;AAJV,GApBc,EA0Bd;AACEV,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE,WAFb;AAGEC,IAAAA,GAAG,EAAE,WAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACQ,IAAD;AAAA,aACN,oBAAOnB,UAAU,CAACmB,IAAD,EAAO,qBAAP,CAAjB,CADM;AAAA,KAJV;AAOED,IAAAA,MAAM,EAAE;AAPV,GA1Bc,CAAhB;AAoCA,MAAME,UAAU,GAAGlB,mBAAmB,CAACmB,GAApB,CAAwB,UAACC,CAAD;AAAA,2CAAaA,CAAb;AAAgBZ,MAAAA,GAAG,EAAEY,CAAC,CAACC;AAAvB;AAAA,GAAxB,CAAnB;AAEA,SACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,OAAO,EAAEb,OAFX;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,UAAU,EAAE;AACVH,MAAAA,KAAK,EAALA,KADU;AAEVC,MAAAA,QAAQ,EAARA;AAFU,KAJd;AAQE,IAAA,iBAAiB,EAAE,KARrB;AASE,IAAA,OAAO,EAAEF,SATX;AAUE,IAAA,QAAQ,EAAEG;AAVZ,IADF;AAcD,CA3DD;;KAAML,a;AA6DN,eAAeA,aAAf","sourcesContent":["import * as React from 'react';\nimport { Table } from 'antd';\nimport { IPaymentTokenHistory } from 'src/interfaces';\nimport { formatDate } from 'src/lib';\n\ninterface IProps {\n  paymentTokenHistory: IPaymentTokenHistory[];\n  searching: boolean;\n  total: number;\n  pageSize: number;\n  onChange(pagination, filters, sorter, extra): Function;\n}\n\nconst ProductsTable = ({\n  paymentTokenHistory,\n  searching,\n  total,\n  pageSize,\n  onChange\n}: IProps) => {\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: '_id',\n      key: 'id'\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render(name, record) {\n        return <span>{name || record.type}</span>;\n      }\n    },\n    {\n      title: 'Seller / To',\n      dataIndex: 'sellerId',\n      key: 'sellerId',\n      render: (sellerId: string, record) => record.sellerInfo?.username || 'N/A'\n    },\n    {\n      title: 'Tokens',\n      dataIndex: 'totalPrice',\n      key: 'totalPrice',\n      sorter: true\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      render: (date: Date) => (\n        <span>{formatDate(date, 'MMMM DD, YYYY HH:mm')}</span>\n      ),\n      sorter: true\n    }\n  ];\n  const dataSource = paymentTokenHistory.map((p) => ({ ...p, key: p._id }));\n\n  return (\n    <Table\n      dataSource={dataSource}\n      columns={columns}\n      className=\"table\"\n      pagination={{\n        total,\n        pageSize\n      }}\n      showSorterTooltip={false}\n      loading={searching}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default ProductsTable;\n"]},"metadata":{},"sourceType":"module"}