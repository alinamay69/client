{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var CamAggregatorService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(CamAggregatorService, _APIRequest);\n\n  var _super = _createSuper(CamAggregatorService);\n\n  function CamAggregatorService() {\n    _classCallCheck(this, CamAggregatorService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CamAggregatorService, [{\n    key: \"online\",\n    value: function online(query) {\n      return this.get(this.buildUrl('/cam-aggregator/online', query));\n    }\n  }, {\n    key: \"categories\",\n    value: function categories(query) {\n      return this.get(this.buildUrl('/cam-aggregator/categories', query));\n    }\n  }, {\n    key: \"profile\",\n    value: function profile(username, service) {\n      var s = 's';\n\n      switch (service) {\n        case 'x':\n        case 'xlovecam':\n          s = 'x';\n          break;\n\n        case 'b':\n        case 'bongacams':\n          s = 'b';\n          break;\n\n        case 's':\n        case 'stripcash':\n          s = 's';\n          break;\n\n        case 'c':\n        case 'chaturbate':\n          s = 'c';\n          break;\n\n        default:\n          break;\n      }\n\n      return this.get(service ? \"/cam-aggregator/profile/\".concat(s, \"/\").concat(username) : \"/cam-aggregator/profile/\".concat(username));\n    }\n  }, {\n    key: \"related\",\n    value: function related(username) {\n      return this.get(\"/cam-aggregator/\".concat(username, \"/related\"));\n    }\n  }]);\n\n  return CamAggregatorService;\n}(APIRequest);\nexport var camAggregatorService = new CamAggregatorService();","map":null,"metadata":{},"sourceType":"module"}