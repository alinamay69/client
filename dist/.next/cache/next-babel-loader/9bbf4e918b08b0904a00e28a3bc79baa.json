{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport { Alert, InputNumber, Radio, Space } from 'antd';\nimport './content.less';\nconst tokens = [20, 50, 100, 200];\nconst CUSTOM_RADIO = 'CUSTOM_RADIO';\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\nexport default class SendTipContent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"inputNumberRef\", void 0);\n\n    this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 0\n    };\n  }\n\n  componentDidMount() {\n    this.inputNumberRef = /*#__PURE__*/createRef();\n  }\n\n  onRadioChange(e) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n    this.setState({\n      radioValue: e.target.value\n    });\n  }\n\n  onInputChange(value) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n\n    if (typeof value !== 'number') {\n      return;\n    }\n\n    if (value <= 0 || value % 1 !== 0) {\n      setDisableOk(true);\n      this.setState({\n        errorMessage: 'Token must be positive interger number!'\n      });\n      return;\n    }\n\n    this.setState({\n      token: value,\n      errorMessage: ''\n    });\n  }\n\n  getValueToken() {\n    const {\n      radioValue,\n      token\n    } = this.state;\n\n    if (radioValue === CUSTOM_RADIO) {\n      return token;\n    }\n\n    return radioValue;\n  }\n\n  render() {\n    const {\n      radioValue,\n      token,\n      errorMessage\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(\"strong\", null, \"Tipping A Model Is Simple!\"), __jsx(\"h3\", null, \"How Many Tokens Would You Like To Tip?\"), errorMessage && __jsx(Alert, {\n      type: \"error\",\n      message: errorMessage\n    }), __jsx(Radio.Group, {\n      value: radioValue,\n      defaultValue: radioValue,\n      onChange: this.onRadioChange.bind(this),\n      size: \"large\",\n      style: {\n        width: 400\n      }\n    }, tokens.map(v => __jsx(Radio, {\n      style: radioStyle,\n      value: v,\n      key: v\n    }, __jsx(Space, {\n      className: \"token-radio\",\n      align: \"start\"\n    }, __jsx(\"span\", null, `${v} Tokens`), __jsx(\"span\", null, `Tip The Model ${v} Tokens!`)))), __jsx(Radio, {\n      style: radioStyle,\n      value: CUSTOM_RADIO\n    }, __jsx(Space, {\n      className: \"token-radio\"\n    }, __jsx(\"span\", null, \"Custom Amount\"), __jsx(InputNumber, {\n      className: \"amount\",\n      ref: this.inputNumberRef,\n      onFocus: () => this.setState({\n        radioValue: CUSTOM_RADIO\n      }),\n      type: \"number\",\n      min: 1,\n      max: 100,\n      step: 1,\n      placeholder: \"Enter Amount\",\n      onChange: this.onInputChange.bind(this),\n      value: token\n    })))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}